#include <Arduino.h>
#include <stdint.h>
#include <config.h>
#include <Wire.h>
#include <Adafruit_NeoPixel.h>

#define LM75_ADDR 0x48
#define PIN  10
#define NUMPIXELS  16

Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB);

void On();
void Measure();
void Save();
void SaveData();
float readTemperature();
void sendTemperatureToTivaC(float temperature);

void setup() {
  Serial.begin(115200);
  Serial2.begin(115200);
  Wire.begin(21, 22);
  pixels.begin();
  On();
  delay(1000);
}

void loop() {
  float temperature = readTemperature();  // Measure temperature once
 
  if (Serial2.available() > 0) {
    int boton = Serial2.read(); // Read a value from Serial2
    if (boton == 1) {
      char xd[8];
      dtostrf(temperature, 4, 2, xd);
      Serial2.print(xd);
      Measure(); //Muestra morado al enviar el dato a la TivaC
    }

    Serial.print(boton);
  }

  pixels.clear();
  pixels.show();
  delay(1000);
}

void On() { 
  pixels.setPixelColor(0, pixels.Color(0, 255, 42)); //verde
  pixels.show();
  delay(1000);
  pixels.clear();
  pixels.show();
  delay(500);

  pixels.setPixelColor(0, pixels.Color(23, 137, 252)); // azul
  pixels.show();
  delay(1000);
  pixels.clear();
  pixels.show();
  delay(500);
}

void Measure() { //Color a desplegar durante medicion
  for (int i = 0; i < NUMPIXELS; i++) {
    pixels.setPixelColor(i, pixels.Color(223, 0, 245)); // morado
    pixels.show();
    delay(100);
    pixels.clear();
    pixels.show();
  }
}

void Save() { //Color para guardar dato en SD
  for (int i = 0; i < 3; i++) { 
    pixels.setPixelColor(0, pixels.Color(245, 0, 63)); //Rojo
    pixels.setPixelColor(NUMPIXELS - 1, pixels.Color(245, 0, 63));
    pixels.show();
    delay(500);
    pixels.clear();
    pixels.show();
    delay(500);
  }
}

void SaveData() { //Color luego de guardar el dato
  for (int j = 0; j < 3; j++) {
    for (int i = 0; i < NUMPIXELS; i++) {
      pixels.setPixelColor(i, pixels.Color(245, 234, 0)); //Amarillo
    }
    pixels.show();
    delay(200);
    pixels.clear();
    pixels.show();
    delay(200);
  }
}

float readTemperature() {
  Wire.beginTransmission(LM75_ADDR);
  Wire.write(0);
  Wire.endTransmission();
  Wire.requestFrom(LM75_ADDR, 2);

  if (Wire.available() >= 2) {
    int tempRaw = Wire.read() << 8 | Wire.read();
    SaveData(); //Muestra amarillo si la lectura esta correcta
    return tempRaw / 256.0;
  }
  return -1.0; // Return -1 if reading fails
}

void sendTemperatureToTivaC(float temperature) {
  Serial2.print("Temperature:");
  Serial2.print(temperature);
  Serial2.println("C");
}
